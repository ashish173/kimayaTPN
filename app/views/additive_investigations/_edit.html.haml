= javascript_include_tag "jquery.ui.datepicker", "application"
%strong Select date
= text_field :day, '',:class => 'datepicker', :size => 7

= form_for(@investigation, :url => patient_additive_investigation_path(@patient,@investigation)) do |f|
  #header
    .module
      %h2
        %span Investigations
      .module-body
        .container_12
          .grid_6
            .module
              %h2
                %span TPN Additives
              .module-body
                = f.fields_for :tpn_additive do |inv|
                  - total = @additives.length==0 ? 1 : @additives.length
                  .input
                    .input_day1
                      %br
                      %strong  Date
                    .input_days
                      - @additives.each do |obj|
                        .input_day
                          %p
                            %strong
                              = obj.investigation.investigated_on.strftime("%d")
                              %br
                              = obj.investigation.investigated_on.strftime("%b")
                      .input_day
                        %strong
                          = Date.today.strftime('%d')
                          %br
                          = Date.today.strftime('%b')
                      .input_day
                        .avg
                          %strong
                            AVG 
                    .input_day1
                      %p Day of Life
                    .input_days
                      - sum = 0
                      - @additives.each do |obj|
                        .input_day
                          %p
                            = obj.day_of_life
                            - sum += obj.day_of_life if obj.day_of_life.present?
                      .input_day
                        = inv.text_field :day_of_life, :size => 2
                      .input_day
                        .avg
                          = sum/total 
                    .input_day1
                      %p Day of TPN
                    .input_days
                      - sum = 0
                      - @additives.each do |obj|
                        .input_day
                          %p
                            = obj.day_of_tpn
                            - sum += obj.day_of_tpn if obj.day_of_tpn.present?
                      .input_day
                        = inv.text_field :day_of_tpn, :size => 2
                      .input_day
                        .avg
                          = sum/total 
                    .input_day1
                      %p Fluid Intake(ml/kg)
                    .input_days
                      - sum = 0
                      - @additives.each do |obj|
                        .input_day
                          %p
                            = obj.fluid_intake
                            - sum += obj.fluid_intake if obj.fluid_intake.present?
                      .input_day
                        = inv.text_field :fluid_intake, :size => 2
                      .input_day
                        .avg
                          = sum/total 
                    .input_day1
                      %p Fluid Intake(ml/kg)
                    .input_days
                      - sum = 0
                      - @additives.each do |obj|
                        .input_day
                          %p
                            = obj.fluid_intake
                            - sum += obj.fluid_intake if obj.fluid_intake.present?
                      .input_day
                        = inv.text_field :fluid_intake, :size => 2
                      .input_day
                        .avg
                          = sum/total 
                    .input_day1
                      %p Enteral Feeds(ml/day)
                    .input_days
                      - sum = 0
                      - @additives.each do |obj|
                        .input_day
                          %p
                            = obj.enteral_feeds
                            - sum += obj.enteral_feeds if obj.enteral_feeds.present?
                      .input_day
                        = inv.text_field :enteral_feeds, :size => 2
                      .input_day
                        .avg
                          = sum/total 
                    .input_day1
                      %p TPN volume
                    .input_days
                      - sum = 0
                      - @additives.each do |obj|
                        .input_day
                          %p
                            = obj.tpn_volume
                            - sum += obj.tpn_volume if obj.tpn_volume.present?
                      .input_day
                        = inv.text_field :tpn_volume, :size => 2
                      .input_day
                        .avg
                          = sum/total 
                    .input_day1
                      %p Amino Acids(g/kg)
                    .input_days
                      - sum = 0
                      - @additives.each do |obj|
                        .input_day
                          %p
                            = obj.amino_acids
                            - sum += obj.amino_acids if obj.amino_acids.present?
                      .input_day
                        = inv.text_field :amino_acids, :size => 2
                      .input_day
                        .avg
                          = sum/total 
                    .input_day1
                      %p Lipids(g/kg)
                    .input_days
                      - sum = 0
                      - @additives.each do |obj|
                        .input_day
                          %p
                            = obj.lipids
                            - sum += obj.lipids if obj.lipids.present?
                      .input_day
                        = inv.text_field :lipids, :size => 2
                      .input_day
                        .avg
                          = sum/total 
                    .input_day1
                      %p TPN Calories(Cal/kg) 
                    .input_days
                      - sum = 0
                      - @additives.each do |obj|
                        .input_day
                          %p
                            = obj.tpn_calories
                            - sum += obj.tpn_calories if obj.tpn_calories.present?
                      .input_day
                        = inv.text_field :tpn_calories, :size => 2
                      .input_day
                        .avg
                          = sum/total 
                    .input_day1
                      %p DIR
                    .input_days
                      - sum = 0
                      - @additives.each do |obj|
                        .input_day
                          %p
                            = obj.dir
                            - sum += obj.dir if obj.dir.present?
                      .input_day
                        = inv.text_field :dir, :size => 2
                      .input_day
                        .avg
                          = sum/total 
                    .input_day1
                      %p NER
                    .input_days
                      - sum = 0
                      - @additives.each do |obj|
                        .input_day
                          %p
                            = obj.ner
                            - sum += obj.ner if obj.ner.present?
                      .input_day
                        = inv.text_field :ner, :size => 2
                      .input_day
                        .avg
                          = sum/total 
          .grid_6
            .module
              %h2
                %span Enteral Nutrition
              .module-body
                = f.fields_for :enteral_diagnosis do |inv|
                  .input
                    .input_left
                      %p
                        = #inv.text_field :ebm
                        EBM
                    .input_right
                      %p
                        = #inv.text_field :formula_feeds
                        Formula Feeds
                  .module
                    %h2
                      %span EBM
                    .module-body
                      %P
                        = inv.radio_button :enteral_nutrition, "EBM only", :class => 'ebm'
                        EBM only
                        = inv.radio_button :enteral_nutrition, "EBM + MCT", :class => 'ebm'
                        EBM + MCT
                      %P
                        = inv.radio_button :enteral_nutrition, "EBM + HMF", :class => 'ebm'
                        EBM + HMF
                        = inv.radio_button :enteral_nutrition, "EBM + MCT + HMF", :class => 'ebm'
                        EBM + MCT + HMF
                  %h4
                    Enteral Calories
                    = inv.text_field :enteral_calories, :size => 7
          .grid_6
            .module
              %h2
                %span Anthropometric Measurments 
              .module-body
                = f.fields_for :anthropometric_measurement do |am|
                  .input0
                    .input2
                      %p
                        Weight
                    .input1
                      %p
                        = am.text_field :weight_measured_date,:class => 'datepicker', :size => 7
                    .input1
                      %p
                        = am.text_field :weight,:size => 7
                        Kg.
                  .input0
                    .input2
                      %p
                        Head Circ
                    .input1
                      %p
                        = am.text_field :head_circ_measured_date, :class => 'datepicker', :size => 7
                    .input1
                      %p
                        = am.text_field :head_circ,:size => 7
                        cm.
                  .input0
                    .input2
                      %p
                        Length
                    .input1
                      %p
                        = am.text_field :length_measured_date, :class => 'datepicker', :size => 7
                    .input1
                      %p
                        = am.text_field :length,:size => 7
                        cm.
  .module
    .grid_5
      &nbsp;
    .grid_5
      .grid_2
        = f.submit "Update", :class => "submit-green"
      .grid_2
        = button_to "Cancel", {:action => 'index', :controller => 'patients'}, :class => "submit-gray"
