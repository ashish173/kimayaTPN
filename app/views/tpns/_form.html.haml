= simple_form_for [ current_hospital, @tpn ], :html => { :class => "form-horizontal well"}, :wrapper => :tpn do |f|
  %h3{:style => "text-align:center"}
    TPN Information
  .form-inputs.row
    = f.input :day_of_tpn, :wrapper_html => { :class => 'span3'}, input_html: {style:'width:50px;'}
    = f.association :user, collection: @doctors, include_blank: false, :wrapper_html => { :class => "span3" }, label: 'Doctor'
    %label.label_custom5 Patient
    %input{:id => "tpn_patient_name", :type => "text", style: "width:180px;", autocomplete: "off" }    
    = f.input :patient_id, :label => false, input_html: { style: "display:none"}
  %div{:style => "width:40%;float:left;" }
    %h3{:style => "margin-left:60px;"}
      Daily Fluid Volume Intake
    .form-inputs.row
      %div
        %label.label_custom4 Previous TPN Date
        %input.input_custom2{ :id => "previous_tpn_date", :class => "datepicker", "data-date-format" => "yyyy/mm/dd" }
      = f.hidden_field :tpn_date, :value => "#{ Date.today }"
      = f.input :current_weight, :wrapper => :append do
        = f.input_field :current_weight, min: '0.00', step:'0.10', :type => "number"
        %span.add-on{:id => "current_weight_help", :"data-toggle" => "popover"}
          %i.icon-info-sign
      %input.input_custom{ :id => "previous_current_weight", :disabled => true }
      %label.label_custom Kg
      = f.input :dextrose_conc, :wrapper => :append do
        = f.input_field :dextrose_conc, min: '0.00', step:'0.10', :type => "number"
        %span.add-on{ :id => "dextrose_conc_help", "data-toggle" => "popover" }
          %i.icon-info-sign
      %input.input_custom{:id => "previous_dextrose_conc", :disabled => true}
      %label.label_custom %
      = f.input :total_fluid_intake, label: 'Fluid Intake', :wrapper => :append do
        = f.input_field :total_fluid_intake, min: '0.00', step:'0.10', :type => "number"
        %span.add-on{ :id => "total_fluid_intake_help", "data-toggle" => "popover" }
          %i.icon-info-sign
      %input.input_custom{:id => "previous_total_fluid_intake", :disabled => true}
      %label.label_custom ml/kg/day
      = f.input :fat_volume, label: 'Fat Required', :wrapper => :append do
        = f.input_field :fat_volume, min: '0.00', step:'0.10', :type => "number"
        %span.add-on{ :id => "fat_volume_help", "data-toggle" => "popover" }
          %i.icon-info-sign
      %input.input_custom{:id => "previous_fat_volume", :disabled => true}
      %label.label_custom gm/kg/day
      = f.input :fat_concentration, label: 'Lipid Concentration', :wrapper => :append do
        = f.input_field :fat_concentration, as: :select, collection: [10,20], include_blank: false, style: "width:62px;"
        %span.add-on{ :id => "fat_concentration_help", "data-toggle" => "popover" }
          %i.icon-info-sign
      %input.input_custom{:id => "previous_fat_concentration", :disabled => true}
      %label.label_custom %
      = f.input :factor, label: 'Overfill Factor', :wrapper => :append do
        = f.input_field :factor, :collection => ['1.0','1.1','1.2','1.3','1.4','1.5'], include_blank: false, style: "width:62px;"
        %span.add-on{ :id => "factor_help", "data-toggle" => "popover" }
          %i.icon-info-sign
      %input.input_custom{:id => "previous_factor", :disabled => true}
      %label.label_custom
  %div{:style => "width:60%;float:left;"}
    %h3{ :style => "margin-left:222px;" }
      Additive Nutrients
    .form-inputs.row{ :style => "margin-top:60px;float:left;"}
      = f.input :amino_acid, :wrapper => :append do
        = f.input_field :amino_acid, min:'0.00', step:'0.10', :type => "number"
        %span.add-on{ :id => "amino_acid_help", "data-toggle" => "popover" }
          %i.icon-info-sign
      %input.input_custom1{ :id => "amino_acid_previous", :disabled => true}
      %label.label_custom1{:style => "padding-left:8px;"} gm/kg  
      %a.button{:id => "amino", :class => "button_custom btn btn-primary", :"data-toggle" => "popover"}
      = f.input :amino_acid_additive_id, :as => "hidden", :wrapper => false, :label => false, input_html: {class: 'input_custom1'}
      %input{:id => :amino_acid_additive, :class => 'input_custom1',  :readonly => true, :value => "#{ TpnMarketAdditive.find(@tpn.amino_acid_additive_id).constant }"}
      %label.label_custom1 %  
      = f.input :sodium_chloride, :wrapper => :append do
        = f.input_field :sodium_chloride, min:'0.00', step:'0.10', :type => "number"
        %span.add-on{ :id => "sodium_chloride_help", "data-toggle" => "popover" }
          %i.icon-info-sign
      %input.input_custom1{ :id => "sodium_chloride_previous", :disabled => true}
      %label.label_custom1 meq/kg  
      %a.button{:id => "sodium", :class => "button_custom btn btn-primary", 'data-toggle' => "popover"}
      = f.input :sodium_chloride_additive_id, :as => "hidden", :wrapper => false, :label => false, input_html: {class: 'input_custom1'}
      %input{ :id => :sodium_chloride_additive, :class => 'input_custom1', :readonly => true, :value => "#{ TpnMarketAdditive.find(@tpn.sodium_chloride_additive_id).constant }"}
      %label.label_custom1 meq/ml 
      = f.input :potassium_chloride, :wrapper => :append do
        = f.input_field :potassium_chloride, min:'0.00', step:'0.10', :type => "number"
        %span.add-on{ :id => "potassium_chloride_help", "data-toggle" => "popover" }
          %i.icon-info-sign
      %input.input_custom1{ :id => "potassium_chloride_previous", :disabled => true}
      %label.label_custom1 meq/kg  
      %a.button{:id => "potassium", :class => "button_custom btn btn-primary",  'data-toggle' => "popover"}
      = f.input :potassium_chloride_additive_id,:as => "hidden", :wrapper => false, :label => false, input_html: {class: 'input_custom1'}
      %input{ :id => :potassium_chloride_additive, :class => 'input_custom1', :readonly => true, :value => "#{ TpnMarketAdditive.find(@tpn.potassium_chloride_additive_id).constant }"}
      %label.label_custom1 meq/ml 
      = f.input :calcium, :wrapper => :append do
        = f.input_field :calcium, min:'0.00', step:'0.10', :type => "number"
        %span.add-on{ :id => "calcium_help", "data-toggle" => "popover" }
          %i.icon-info-sign
      %input.input_custom1{ :id => "calcium_previous", :disabled => true}
      %label.label_custom1 meq/kg  
      %a.button{:id => "calcium", :class => "button_custom btn btn-primary",  'data-toggle' => "popover"}
      = f.input :calcium_additive_id, :as => "hidden", :wrapper => false, :label => false, input_html: {class: 'input_custom1'}
      %input{ :id => :calcium_additive, :class => 'input_custom1', :readonly => true, :value => "#{TpnMarketAdditive.find(@tpn.calcium_additive_id).constant }"}
      %label.label_custom1 meq/ml 
      = f.input :magnesium, :wrapper => :append do
        = f.input_field :magnesium, min:'0.00', step:'0.10', :type => "number"
        %span.add-on{ :id => "magnesium_help", "data-toggle" => "popover" }
          %i.icon-info-sign
      %input.input_custom1{ :id => "magnesium_previous", :disabled => true}
      %label.label_custom1 meq/kg  
      %a.button{:id => "magnesium", :class => "button_custom btn btn-primary",  'data-toggle' => "popover"}
      = f.input :magnesium_additive_id, :as => "hidden", :wrapper => false, :label => false, input_html: {class: 'input_custom1'}
      %input{ :id => :magnesium_additive, :class => 'input_custom1', :readonly => true, :value => "#{ TpnMarketAdditive.find(@tpn.magnesium_additive_id).constant }"}
      %label.label_custom1 meq/ml 
      = f.input :administration, collection: ['Peripheral Line', 'Central Line'], as: :radio_buttons, :checked => 'Peripheral Line', :wrapper_html => {:class => "span_custom1" }
  = f.button :submit, :Class => "btn btn-primary", :value => "Calculate Tpn"
#amino-modal{:style => "display:none"}
  .body
    %table#aminoTable.table{:style => "margin-bottom:0px;"}
      %thead
        %th{:style => "display:none;"}
        %th
          Available Dose
        %th
          Conc.
        %tbody 
        - TpnMarketAdditive.amino_acid.each do |additive|
          %tr
            %td{:style => "display:none;"}
              = additive.id
            %td
              = additive.market_name
            %td
              = additive.constant
              = additive.unit
#sodium-modal{:style => "display:none"}
  .body
    %table#sodiumTable.table{:style => "margin-bottom:0px;"}
      %thead
        %th{:style => "display:none;"}
        %th
          Available Dose
        %th
          Conc.
        %tbody 
        - TpnMarketAdditive.sodium_chloride.each do |additive|
          %tr
            %td{:style => "display:none;"}
              = additive.id
            %td
              = additive.market_name
            %td
              = additive.constant
              = additive.unit
#potassium-modal{:style => "display:none"}
  .body
    %table#potassiumTable.table{:style => "margin-bottom:0px;"}
      %thead
        %th{:style => "display:none;"}
        %th
          Available Dose
        %th
          Conc.
        %tbody 
        - TpnMarketAdditive.potassium_chloride.each do |additive|
          %tr
            %td{:style => "display:none;"}
              = additive.id
            %td
              = additive.market_name
            %td
              = additive.constant
              = additive.unit
#calcium-modal{:style => "display:none"}
  .body
    %table#calciumTable.table{:style => "margin-bottom:0px;"}
      %thead
        %th{:style => "display:none;"}
        %th
          Available Dose
        %th
          Conc.
        %tbody 
        - TpnMarketAdditive.calcium.each do |additive|
          %tr
            %td{:style => "display:none;"}
              = additive.id
            %td
              = additive.market_name
            %td
              = additive.constant
              = additive.unit
#magnesium-modal{:style => "display:none;"}
  .body
    %table#magnesiumTable.table{:style => "margin-bottom:0px;"}
      %thead
        %th{:style => "display:none;"}
        %th
          Available Dose
        %th
          Conc.
        %tbody 
        - TpnMarketAdditive.magnesium.each do |additive|
          %tr
            %td{:style => "display:none;"}
              = additive.id
            %td
              = additive.market_name
            %td
              = additive.constant
              = additive.unit
:javascript
  $('#previous_tpn_date').change(function(){ $.ajax({ url:"/hospitals/#{current_hospital.slug}/tpn/previous_tpn",data:{ patient_id: $('#tpn_patient_id').val(),date: $('#previous_tpn_date').val() }, beforeSend: function() {  } }); });
  $('#tpn_patient_name').change(function(){ $('#previous_tpn_date').popover('hide'); $.ajax({ url:"/hospitals/#{current_hospital.slug}/tpn/previous_tpn_date", data:{ patient_id: $('#tpn_patient_id').val() }, complete: function(data) { eval(data.responseText);   } }); } );
  var getSource = function () {
  var patients = #{@patients};
  var users = $.map(patients,function(obj){return obj["patient"]})
   return $.map(users, function (user) {
     return {
       id: user['id'],
      name: user['name'],
      toString: function () {
        return JSON.stringify(this);
      },
      toLowerCase: function () {
        return this.name.toLowerCase();
        },
      indexOf: function (string) {
        return String.prototype.indexOf.apply(this.name, arguments);
          },
      replace: function (string) {
        return String.prototype.replace.apply(this.name, arguments);
          }
         };
       });
       };

       $('#tpn_patient_name').typeahead({
         minLength: 1,
         source: getSource(),
         display: 'name',
         updater: function (itemString) {
         var item = JSON.parse(itemString);
       $('#tpn_patient_id').val(item.id);
         return item.name;
         }
       });

